---
# tasks file for fio_1client_seqio

- name: setup timestamps for tests in fio_1client_seqio
  shell: 'echo "fio_1client_seqio timestamps: " > /tmp/fio_1client_seqio.ts.txt'
  when: inventory_hostname == groups.clients[0]

- name: mark start of write test
  shell: 'echo -n "starting write test: " >> /tmp/fio_1client_seqio.ts.txt; date >> /tmp/fio_1client_seqio.ts.txt'
  when: inventory_hostname == groups.clients[0]

- name: fio sequential write
  shell: 'fio --name writetest --ioengine=sync --rw=write --direct=0 --create_on_open=1 --end_fsync=1 --bs=128K --directory={{ fio_1client_seqio_mntpt }} --filename_format=f.\$jobnum.\$filenum --filesize=1g --size=1g --numjobs=2 --output=/tmp/fio_1client_seqio.write.txt'
  when: inventory_hostname == groups.clients[0]

- name: mark end of write test
  shell: 'echo -n "write test done: " >> /tmp/fio_1client_seqio.ts.txt; date >> /tmp/fio_1client_seqio.ts.txt'
  when: inventory_hostname == groups.clients[0]

# TODO: also on servers
- name: drop caches before fio sequential read 
  shell: 'sync ; echo 3 > /proc/sys/vm/drop_caches'
  when: inventory_hostname == groups.clients[0]

- name: mark start of read test
  shell: 'echo -n "starting read test: " >> /tmp/fio_1client_seqio.ts.txt; date >> /tmp/fio_1client_seqio.ts.txt'
  when: inventory_hostname == groups.clients[0]

- name: fio sequential read 
  shell: 'fio --name readtest --ioengine=sync --rw=read --direct=0 --bs=128K --directory={{ fio_1client_seqio_mntpt }} --filename_format=f.\$jobnum.\$filenum --filesize=1g --size=1g --numjobs=2 --output=/tmp/fio_1client_seqio.read.txt'
  when: inventory_hostname == groups.clients[0]

- name: mark end of read test
  shell: 'echo -n "read test done: " >> /tmp/fio_1client_seqio.ts.txt; date >> /tmp/fio_1client_seqio.ts.txt'
  when: inventory_hostname == groups.clients[0]

- name: collect fio output 
  fetch:
    src: "/tmp/fio_1client_seqio.{{ item }}.txt"
    dest: '{{ fio_1client_seqio_resdir }}'
  loop:
    - write
    - read
    - ts
  when: inventory_hostname == groups.clients[0]

