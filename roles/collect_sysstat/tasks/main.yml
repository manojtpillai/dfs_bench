---
# tasks file for collect_sysstat

- name: stop active collect_sysstat commands
  shell: "pkill -x {{ item }}"
  register: pkill_result
  failed_when: pkill_result.rc > 1
  loop:
    - iostat
    - sar
    - top
    - pidstat
    - vmstat

- name: start collect_sysstat commands
  block:
  - name: start collect_sysstat iostat
    shell: "nohup iostat -N -tkdx {{ collect_sysstat_interval }} > /tmp/collect_sysstat.iostat.txt 2>&1 < /dev/null &"
  - name: start collect_sysstat sar
    shell: "nohup sar -n DEV -BdrquW -p {{ collect_sysstat_interval }} > /tmp/collect_sysstat.sar.txt 2>&1 < /dev/null &"
  - name: start collect_sysstat top
    shell: "nohup top -bH -d {{ collect_sysstat_interval }} > /tmp/collect_sysstat.top_thr.txt  2>&1 < /dev/null &"
  - name: start collect_sysstat top_proc
    shell: "nohup top -b -d {{ collect_sysstat_interval }} > /tmp/collect_sysstat.top_proc.txt 2>&1 < /dev/null &"
  - name: start collect_sysstat pidstat
    shell: "nohup pidstat -t {{ collect_sysstat_interval }} > /tmp/collect_sysstat.pidstat.txt 2>&1 < /dev/null &"
  - name: start collect_sysstat vmstat
    shell: "nohup vmstat -t {{ collect_sysstat_interval }} > /tmp/collect_sysstat.vmstat.txt 2>&1 < /dev/null &"
  when: collect_sysstat_mode == "start"

- name: stop active collect_sysstat commands
  shell: "pkill -x {{ item }}"
  register: pkill_result
  failed_when: pkill_result.rc > 1
  loop:
    - iostat
    - sar
    - top
    - pidstat
    - vmstat
  when: collect_sysstat_mode == "stop"

- name: fetch collect_sysstat output
  fetch:
    src: "/tmp/collect_sysstat.{{ item }}.txt"
    dest: '{{ collect_sysstat_dir }}'
  loop:
    - iostat
    - sar
    - top_thr
    - top_proc
    - pidstat
    - vmstat
  when: collect_sysstat_mode == "gather"

